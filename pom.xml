<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.cavallium.rockserver</groupId>
  <artifactId>rockserver-core</artifactId>
  <version>${revision}</version>

  <properties>
    <revision>1.0.0-SNAPSHOT</revision>
    <maven.compiler.release>23</maven.compiler.release>
    <native.maven.plugin.version>0.10.3</native.maven.plugin.version>
    <gestalt.version>0.36.0</gestalt.version>
    <rocksdb.version>10.2.1</rocksdb.version>
    <slf4j.version>2.0.16</slf4j.version>
    <imageName>rockserver-core</imageName>
    <mainClass>it.cavallium.rockserver.core.Main</mainClass>
    <protobuf-plugin.version>0.6.1</protobuf-plugin.version>
    <protobuf.version>3.25.5</protobuf.version>
    <grpc.version>1.69.1</grpc.version>
    <netty.version>4.2.3.Final</netty.version>
    <rainbowgum.version>0.8.2</rainbowgum.version>
  </properties>

  <repositories>
    <repository>
      <id>sonatype-snapshot</id>
      <name>Sonatype OSS Snapshots</name>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>
    <repository>
      <id>maven_central</id>
      <name>Maven Central</name>
      <url>https://repo.maven.apache.org/maven2/</url>
    </repository>
    <repository>
      <id>mchv-release</id>
      <name>MCHV Release Apache Maven Packages</name>
      <url>https://mvn.mchv.eu/repository/mchv</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>mchv-release-distribution</id>
      <name>MCHV Release Apache Maven Packages Distribution</name>
      <url>https://mvn.mchv.eu/repository/mchv</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <snapshotRepository>
      <id>mchv-snapshot-distribution</id>
      <name>MCHV Snapshot Apache Maven Packages Distribution</name>
      <url>https://mvn.mchv.eu/repository/mchv-snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-bom</artifactId>
        <version>1.14.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.rocksdb</groupId>
      <artifactId>rocksdbjni</artifactId>
      <version>${rocksdb.version}</version>
    </dependency>
    <dependency>
      <groupId>it.cavallium</groupId>
      <artifactId>datagen</artifactId>
      <version>1.1.24</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.argparse4j</groupId>
      <artifactId>argparse4j</artifactId>
      <version>0.9.0</version>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>8.5.16</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>26.0.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.github.stephenc.high-scale-lib</groupId>
      <artifactId>high-scale-lib</artifactId>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <groupId>com.github.gestalt-config</groupId>
      <artifactId>gestalt-core</artifactId>
      <version>${gestalt.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.gestalt-config</groupId>
      <artifactId>gestalt-hocon</artifactId>
      <version>${gestalt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
      <version>0.22.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${grpc.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <version>${netty.version}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <classifier>linux-x86_64</classifier>
      <version>${netty.version}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <version>2.0.65.Final</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.reactivestreams</groupId>
      <artifactId>reactive-streams</artifactId>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
      <version>3.6.8</version>
    </dependency>
    <dependency>
      <groupId>com.salesforce.servicelibs</groupId>
      <artifactId>reactor-grpc-stub</artifactId>
      <version>1.2.4</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-influx</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-jmx</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.mweirauch</groupId>
      <artifactId>micrometer-jvm-extras</artifactId>
      <version>0.2.2</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>4.5.10</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java3</artifactId>
      <version>4.5.10</version>
    </dependency>

    <dependency>
      <groupId>org.lz4</groupId>
      <artifactId>lz4-java</artifactId>
      <version>1.8.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.1</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>java</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>it.cavallium.rockserver.core.Main</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <release>${maven.compiler.release}</release>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.3.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.1</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>it.cavallium.rockserver.core.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf-plugin.version}</version>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
          <protocPlugins>
            <protocPlugin>
              <id>reactor-grpc</id>
              <groupId>com.salesforce.servicelibs</groupId>
              <artifactId>reactor-grpc</artifactId>
              <version>1.2.4</version>
              <mainClass>com.salesforce.reactorgrpc.ReactorGrpcGenerator</mainClass>
            </protocPlugin>
          </protocPlugins>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <pluginParameter>
                @generated=omit
              </pluginParameter>
            </configuration>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>fatjar</id>
      <dependencies>
        <dependency>
          <groupId>io.jstach.rainbowgum</groupId>
          <artifactId>rainbowgum-core</artifactId>
          <version>${rainbowgum.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>io.jstach.rainbowgum</groupId>
          <artifactId>rainbowgum-pattern</artifactId>
          <version>${rainbowgum.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>io.jstach.rainbowgum</groupId>
          <artifactId>rainbowgum-slf4j</artifactId>
          <version>${rainbowgum.version}</version>
          <scope>compile</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.4.0</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/standalone/java/</source>
                    <source>src/fatjar/java/</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.4.1</version>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>library</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.5.0</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/library/java/</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native</id>
      <dependencies>
        <dependency>
          <groupId>io.jstach.rainbowgum</groupId>
          <artifactId>rainbowgum-core</artifactId>
          <version>${rainbowgum.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>io.jstach.rainbowgum</groupId>
          <artifactId>rainbowgum-pattern</artifactId>
          <version>${rainbowgum.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>io.jstach.rainbowgum</groupId>
          <artifactId>rainbowgum-slf4j</artifactId>
          <version>${rainbowgum.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.graalvm.sdk</groupId>
          <artifactId>nativeimage</artifactId>
          <version>23.1.0</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.4.0</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/native/java/</source>
                    <source>src/standalone/java/</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native.maven.plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <fallback>false</fallback>
              <agent>
                <enabled>true</enabled>
              </agent>
              <buildArgs>
                <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                <buildArg>-march=native</buildArg>
                <buildArg>-H:IncludeResourceBundles=net.sourceforge.argparse4j.internal.ArgumentParserImpl</buildArg>
                <buildArg>-O1</buildArg>
                <buildArg>-H:+StaticExecutableWithDynamicLibC</buildArg>
                <buildArg>-H:+JNI</buildArg>
                <buildArg>-H:+ForeignAPISupport</buildArg>
                <buildArg>-H:IncludeResources=librocksdbjni-linux64.so</buildArg>
                <buildArg>-H:IncludeResources=it/cavallium/rockserver/core/resources/default.conf</buildArg>
                <buildArg>-H:IncludeResources=it/cavallium/rockserver/core/resources/build.properties</buildArg>
                <buildArg>-H:DynamicProxyConfigurationFiles=proxy-config.json</buildArg>
                <buildArg>-H:ReflectionConfigurationFiles=reflect-config.json</buildArg>
                <buildArg>--install-exit-handlers</buildArg>

                <buildArg>--initialize-at-build-time=io.jstach.rainbowgum</buildArg>
                <buildArg>--initialize-at-build-time=io.jstach.rainbowgum.slf4j</buildArg>
                <buildArg>--initialize-at-build-time=org.slf4j</buildArg>
                <buildArg>--initialize-at-build-time=io.netty.util.internal.logging</buildArg>

                <buildArg>--initialize-at-run-time=org.rocksdb.RocksDB</buildArg>
                <buildArg>--initialize-at-run-time=org.rocksdb.RocksObject</buildArg>
                <buildArg>--initialize-at-run-time=org.rocksdb.RocksDBException</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.util.AbstractReferenceCounted</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.handler.ssl.JdkApplicationProtocolNegotiator</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator</buildArg>
                <buildArg>--report-unsupported-elements-at-runtime</buildArg>

                <buildArg>-dsa</buildArg>
                <buildArg>--no-fallback</buildArg>
                <buildArg>--gc=G1</buildArg>
                <buildArg>--link-at-build-time</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>java-agent</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath/>
                    <argument>${mainClass}</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>native</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.build.directory}/${imageName}</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>